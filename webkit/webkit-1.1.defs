;; -*- scheme -*-
;; PyWebKitGtk - Python bindings to WebKit/GTK+
;;
;; Copyright (C) 2008  Jan Michael Alonzo <jmalonzo@unpluggable.com>
;; 
;; This library is free software; you can redistribute it and/or
;; modify it under the terms of the GNU Library General Public
;; License as published by the Free Software Foundation; either
;; version 2 of the License, or (at your option) any later version.
;; 
;; This library is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; Library General Public License for more details.
;; 
;; You should have received a copy of the GNU Library General Public
;; License along with this library; if not, write to the Free Software
;; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston MA  02110-1301 USA
;;


;; from webkit/webkitwebinspector.h
(define-method get_web_view
  (of-object "WebKitWebInspector")
  (c-name "webkit_web_inspector_get_web_view")
  (return-type "WebKitWebView*")
)

(define-method get_inspected_uri
  (of-object "WebKitWebInspector")
  (c-name "webkit_web_inspector_get_inspected_uri")
  (return-type "const-gchar*")
)

;; from webkit/webkitwebview.h
(define-method get_web_inspector
  (of-object "WebKitWebView")
  (c-name "webkit_web_view_get_inspector")
  (return-type "WebKitWebInspector*")
)

(define-method get_window_features
  (of-object "WebKitWebView")
  (c-name "webkit_web_view_get_window_features")
  (return-type "WebKitWebWindowFeatures*")
)

(define-method reload_bypass_cache
  (of-object "WebKitWebView")
  (c-name "webkit_web_view_reload_bypass_cache")
  (return-type "none")
)

(define-method can_show_mime_type
  (of-object "WebKitWebView")
  (c-name "webkit_web_view_can_show_mime_type")
  (return-type "gboolean")
  (parameters
   '("const gchar*" "mime_type")
   )
)

;; from webkit/webkitwebwindowfeatures.h
(define-function webkit_web_window_features_new
  (is-constructor-of "WebKitWebWindowFeatures")
  (c-name "webkit_web_window_features_new")
  (caller-owns-return #t)
  (return-type "WebKitWebWindowFeatures*")
)

(define-method equal
  (of-object "WebKitWebWindowFeatures")
  (c-name "webkit_web_window_features_equal")
  (return-type "gboolean")
  (parameters
   '("WebKitWebWindowFeatures*" "other_features")
   )
)

;; from webkit/webkitwebnavigationaction.h

(define-method get_reason
  (of-object "WebKitWebNavigationAction")
  (c-name "webkit_web_navigation_action_get_reason")
  (return-type "WebKitWebNavigationReason")
)

(define-method set_reason
  (of-object "WebKitWebNavigationAction")
  (c-name "webkit_web_navigation_set_reason")
  (return-type "none")
  (parameters
   '("reason" "WebKitWebNavigationReason")
   )
)

(define-method get_original_uri
  (of-object "WebKitWebNavigationAction")
  (c-name "webkit_web_navigation_action_get_original_uri")
  (return-type "const-gchar*")
)

(define-method set_original_uri
  (of-object "WebKitWebNavigationAction")
  (c-name "webkit_web_navigation_action_set_original_uri")
  (return-type "none")
  (parameters
   '("original_uri" "const-gchar*")
   )
)

(define-method get_button
  (of-object "WebKitWebNavigationAction")
  (c-name "webkit_web_navigation_action_get_button")
  (return-type "gint")
)

(define-method get_modifier_state
  (of-object "WebKitWebNavigationAction")
  (c-name "webkit_web_navigation_action_get_modifier_state")
  (return-type "gint")
)

;; from webkit/webkitwebpolicydecision.h

(define-method use
  (of-object "WebKitWebPolicyDecision")
  (c-name "webkit_web_policy_decision_use")
  (return-type "none")
)

(define-method ignore
  (of-object "WebKitWebPolicyDecision")
  (c-name "webkit_web_policy_decision_ignore")
  (return-type "none")
)

(define-method download
  (of-object "WebKitWebPolicyDecision")
  (c-name "webkit_web_policy_decision_download")
  (return-type "none")
)
